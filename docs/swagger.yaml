definitions:
  card.cardOutput:
    properties:
      address:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceMax:
        type: integer
      priceMin:
        type: integer
      shortDescription:
        type: string
      tags:
        items:
          $ref: '#/definitions/card.tagOutput'
        type: array
      title:
        type: string
    type: object
  card.tagOutput:
    properties:
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  domain.Coordinate:
    properties:
      lat:
        type: number
      lon:
        type: number
    type: object
  lobby.cardOutput:
    properties:
      address:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceMax:
        type: integer
      priceMin:
        type: integer
      shortDescription:
        type: string
      title:
        type: string
    type: object
  lobby.finalVoteOutput:
    properties:
      cardID:
        type: integer
      id:
        type: integer
      lobbyID:
        type: string
      userID:
        type: string
    type: object
  lobby.findLobbyInput:
    properties:
      dist:
        type: number
      location:
        $ref: '#/definitions/domain.Coordinate'
    type: object
  lobby.lobbyOutput:
    properties:
      cards:
        items:
          $ref: '#/definitions/lobby.cardOutput'
        type: array
      createdAt:
        type: string
      finalVotes:
        items:
          $ref: '#/definitions/lobby.finalVoteOutput'
        type: array
      id:
        type: string
      lobbySettings:
        $ref: '#/definitions/lobby.lobbySettingsOutput'
      location:
        $ref: '#/definitions/domain.Coordinate'
      matches:
        items:
          $ref: '#/definitions/lobby.matchOutput'
        type: array
      swipes:
        items:
          $ref: '#/definitions/lobby.swipeOutput'
        type: array
    type: object
  lobby.lobbySettingsOutput:
    properties:
      id:
        type: integer
      maxDistance:
        type: number
      priceMax:
        type: integer
      priceMin:
        type: integer
    type: object
  lobby.matchOutput:
    properties:
      cardID:
        type: integer
      id:
        type: integer
      lobbyID:
        type: string
    type: object
  lobby.nearestLobbyOutput:
    properties:
      distance:
        type: number
      lobby:
        $ref: '#/definitions/lobby.lobbyOutput'
    type: object
  lobby.swipeOutput:
    properties:
      cardID:
        type: integer
      lobbyID:
        type: string
      type:
        type: string
      userID:
        type: string
    type: object
  usecase.CardInput:
    properties:
      address:
        type: string
      description:
        type: string
      image:
        type: string
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceMax:
        type: integer
      priceMin:
        type: integer
      shortDescription:
        type: string
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
    type: object
  usecase.LobbyInput:
    properties:
      location:
        $ref: '#/definitions/domain.Coordinate'
    type: object
  usecase.TagInput:
    properties:
      icon:
        type: string
      name:
        type: string
    type: object
  usecase.UserInput:
    properties:
      avatar:
        type: string
      name:
        type: string
    type: object
  usecase.UserInputExtended:
    properties:
      avatar:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  user.userOutput:
    properties:
      avatar:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: Manage cards, lobbies, swipes
  title: DishDash server
  version: "2.0"
paths:
  /cards:
    get:
      consumes:
      - application/json
      description: Get a list of cards from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of cards
          schema:
            items:
              $ref: '#/definitions/card.cardOutput'
            type: array
        "500":
          description: Internal Server Error
      summary: Get cards
      tags:
      - cards
    post:
      consumes:
      - application/json
      description: Create a new card in the database
      parameters:
      - description: Card data
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/usecase.CardInput'
      produces:
      - application/json
      responses:
        "200":
          description: Saved card
          schema:
            $ref: '#/definitions/card.cardOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a card
      tags:
      - cards
  /cards/tags:
    get:
      consumes:
      - application/json
      description: Get a list of tags from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of tags
          schema:
            items:
              $ref: '#/definitions/card.tagOutput'
            type: array
        "500":
          description: Internal Server Error
      summary: Get tags
      tags:
      - cards
    post:
      consumes:
      - application/json
      description: Create a new tag in the database
      parameters:
      - description: Tag data
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/usecase.TagInput'
      produces:
      - application/json
      responses:
        "200":
          description: Saved tag
          schema:
            $ref: '#/definitions/card.tagOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a tag
      tags:
      - cards
  /lobbies:
    post:
      consumes:
      - application/json
      description: Create a new lobby in the database
      parameters:
      - description: Lobby data
        in: body
        name: lobby
        required: true
        schema:
          $ref: '#/definitions/usecase.LobbyInput'
      produces:
      - application/json
      responses:
        "200":
          description: Saved lobby
          schema:
            $ref: '#/definitions/lobby.lobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a lobby
      tags:
      - lobbies
  /lobbies/{id}:
    delete:
      consumes:
      - application/json
      description: delete a lobby in the database
      parameters:
      - description: Lobby id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: delete a lobby
      tags:
      - lobbies
    get:
      consumes:
      - application/json
      description: Get a lobby from the database by ID
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lobby data
          schema:
            $ref: '#/definitions/lobby.lobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get lobby by ID
      tags:
      - lobbies
  /lobbies/find:
    post:
      consumes:
      - application/json
      description: shortcut for find nearest + create if not close enough
      parameters:
      - description: Location + Distance (in metres)
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/lobby.findLobbyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lobby.lobbyOutput'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/lobby.lobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: find lobby
      tags:
      - lobbies
  /lobbies/nearest:
    post:
      consumes:
      - application/json
      description: find nearest lobby in the database
      parameters:
      - description: Location
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/domain.Coordinate'
      produces:
      - application/json
      responses:
        "200":
          description: Nearest Lobby + Distance (in metres)
          schema:
            $ref: '#/definitions/lobby.nearestLobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: find nearest lobby
      tags:
      - lobbies
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of users from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/user.userOutput'
            type: array
        "500":
          description: Internal Server Error
      summary: Get users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the database
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/usecase.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: Saved user
          schema:
            $ref: '#/definitions/user.userOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a existing user in the database
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/usecase.UserInputExtended'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user
          schema:
            $ref: '#/definitions/user.userOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update a user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user from the database by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/user.userOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get user by ID
      tags:
      - users
swagger: "2.0"
